module Module

type I =
    abstract AM1: (int -> int)
    abstract AM2: (int -> |(|(0)int -> int|)|(1))
    abstract AM3: int -> (int -> int) -> int

    member P1: (int -> int)
    member P2: (int -> |(|(2)int -> int|)|(3))

    member M1: int -> (int -> int) -> int

val a: (int -> int)
val b: int -> (int -> int)
val c: int -> int -> (int -> int)

val d: |(|(4)(int -> int)|)|(5)
val e: int -> |(|(6)(int -> int)|)|(7)
val f: int -> int -> |(|(8)(int -> int)|)|(9)

val g: (int -> |(|(10)int -> int|)|(11))

---------------------------------------------------------
(0): ReSharper Dead Code: Redundant parentheses
(1):<secondary> ReSharper Dead Code: Redundant parentheses
(2): ReSharper Dead Code: Redundant parentheses
(3):<secondary> ReSharper Dead Code: Redundant parentheses
(4): ReSharper Dead Code: Redundant parentheses
(5):<secondary> ReSharper Dead Code: Redundant parentheses
(6): ReSharper Dead Code: Redundant parentheses
(7):<secondary> ReSharper Dead Code: Redundant parentheses
(8): ReSharper Dead Code: Redundant parentheses
(9):<secondary> ReSharper Dead Code: Redundant parentheses
(10): ReSharper Dead Code: Redundant parentheses
(11):<secondary> ReSharper Dead Code: Redundant parentheses
